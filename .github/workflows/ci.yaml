name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
jobs:
  fmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android
          components: rustfmt
      - name: Cargo fmt
        run: cargo fmt --all -- --check
  test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-14
          - ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{runner.os}}-${{runner.arch}}-${{ github.workflow }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build --target aarch64-linux-android
  simulator:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-linux-android
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{runner.os}}-${{runner.arch}}-${{ github.workflow }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo install cargo-apk
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{runner.arch}}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.34.0
        with:
          api-level: 34
          force-avd-creation: false
          target: google_apis
          arch: x86_64
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run tests in android emulator
        uses: reactivecircus/android-emulator-runner@v2.34.0
        env:
          RANLIB: ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            cargo apk run --target x86_64-linux-android --example simple
